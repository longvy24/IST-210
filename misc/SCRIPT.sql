use lfv5020;

DROP TABLE COURSE_RULE;
DROP TABLE PREFERENCES;
DROP TABLE TIMES;
DROP TABLE ROOM;
DROP TABLE PTTEACHER;
DROP TABLE FULLTIME;
DROP TABLE PHONE;
DROP TABLE SECTION;
DROP TABLE WHITEBOARD;
DROP TABLE BUILDING;
DROP TABLE TIMESLOT;
DROP TABLE SEMESTER;
DROP TABLE FACULTY;
DROP TABLE ROADMAP;
DROP TABLE PREREQUISITES;
DROP TABLE MAJOR;
DROP TABLE COURSE;
/*----------DROP TABLES IN THIS ORDER-------------*/




CREATE TABLE COURSE(
	ID				INT,
	CNAME			VARCHAR(45),
    CREDITS			INT,
    DESCRIPTION		VARCHAR(100),
    
    PRIMARY KEY (ID)
);

CREATE TABLE FACULTY(
	ID				INT not null auto_increment,
    FNAME			VARCHAR(45),
    LNAME			VARCHAR(45),
    ADDRESS			VARCHAR(45),
	CITY			VARCHAR(45),
    ZIP				VARCHAR(45),
    EMAIL			VARCHAR(45),
    SALARY			DECIMAL(10,2),
    
    PRIMARY KEY (ID)
);

CREATE TABLE SEMESTER(
	ID				INT,
    SEMESTER		VARCHAR(45),
    
	PRIMARY KEY (ID)
);


CREATE TABLE TIMESLOT(
	ID				INT not null auto_increment,
    START_TIME		CHAR(10),
    END_TIME		CHAR(10),
    TDAY			VARCHAR(45),

    PRIMARY KEY (ID)
);


CREATE TABLE BUILDING(
	ID				INT,
    BNAME			VARCHAR(45),
    DESCRIPTION		VARCHAR(45),
    PRIMARY KEY (ID)
);


CREATE TABLE MAJOR(
	ID					INT,
    PROGRAM				VARCHAR(100),
    DEAN				VARCHAR(45),
    PROGRAM_COORDINATOR	VARCHAR(45),
    
    PRIMARY KEY (ID)
);


CREATE TABLE WHITEBOARD(
	RULEID				INT,
    RULEDESCRIPTION		VARCHAR(150),
    
    PRIMARY KEY (RULEID)
);


/*ABOVE THIS COMMENT ARE TABLES WITHOUT FOREIGN KEYS
-----------------------------------------------------------------------------------------------------
  BELOW ARE TABLES THAT REQUIRE FOREIGN KEYS
 */
 
 
 /*FOREIGN KEY (COURSE_ID, FACULTY_ID, SEMESTER_ID)-------------------------------------------------*/
 CREATE TABLE SECTION(
	ID				INT,
    CAPACITY		INT,
    STYPE			VARCHAR(45),
    STARTDATE		DATE,
    ENDDATE			DATE,
    COURSE_ID		INT,
    FACULTY_ID		INT,
    SEMESTER_ID		INT,
    
	primary key(id),
    foreign key(COURSE_id) references COURSE(ID),
    foreign key(FACULTY_id) references FACULTY(ID),
    foreign key(SEMESTER_id) references SEMESTER(ID)
);
 /*FOREIGN KEY (COURSE_ID, FACULTY_ID, SEMESTER_ID)-------------------------------------------------*/


  
 
 /*FACULTY_ID IS THE FOREIGN KEY FOR THESE TABLES -----------------------------------------------*/
CREATE TABLE PHONE(
	PHONE			varchar(15),
    PTYPE			VARCHAR(10),
    FACULTY_ID		INT,
    
    PRIMARY KEY (PHONE),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(ID)
);

CREATE TABLE FULLTIME(
	FACULTY_ID		INT,
    CREDITS			INT,
    FTYPE			VARCHAR(45),
    OFFICE			VARCHAR(45),
    
    PRIMARY KEY(FACULTY_ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(ID)
);

CREATE TABLE PTTEACHER(
	FACULTY_ID		INT,
    DEGREE			VARCHAR(100),
    MAJOR			VARCHAR(45),
    
    PRIMARY KEY (FACULTY_ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(ID)
);

/* FACULTY_ID IS THE FOREIGN KEY FOR THESE TABLES ----------------------------------------------*/





 /*FOREIGN KEY IS BUILDING_ID-----------------------------------------------------------------*/

CREATE TABLE ROOM(
	ID				INT,
    CAPACITY		INT,
    RTYPE			VARCHAR(45),
    BUILDING_ID		INT,
    
    PRIMARY KEY(ID),
    FOREIGN KEY(BUILDING_ID) REFERENCES BUILDING (ID)
);

/*FOREIGN KEY IS BUILDING_ID---------------------------------------------------------------*/



/* PRIMARY KEY AND FOREIGN KEY (SECTION_ID, ROOM_ID, TIMESLOT_ID) ------------------------*/
CREATE TABLE TIMES(
	SECTION_ID		INT,
    TIMESLOT_ID		INT,
    ROOM_ID			INT,
    
    PRIMARY KEY (SECTION_ID, TIMESLOT_ID, ROOM_ID),
    FOREIGN KEY (SECTION_ID) REFERENCES SECTION(ID),
    FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ID),
    FOREIGN KEY (TIMESLOT_ID) REFERENCES TIMESLOT(ID)
);
/* PRIMARY KEY AND FOREIGN KEY (SECTION_ID, ROOM_ID, TIMESLOT_ID) -------------------------*/




/*FOREIGN KEYS (FACULTY_ID, COURSE_ID, TIMESLOT_ID, SEMESTER_ID) -------------------------*/
CREATE TABLE PREFERENCES(
	ID				INT,
    FACULTY_ID		INT,
    COURSE_ID		INT,
    TIMESLOT_ID		INT,
    SEMESTER_ID		INT,
    
    PRIMARY KEY(ID),
    FOREIGN KEY (FACULTY_ID) REFERENCES FACULTY(ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID),
    FOREIGN KEY (TIMESLOT_ID) REFERENCES TIMESLOT(ID),
    FOREIGN KEY (SEMESTER_ID) REFERENCES SEMESTER(ID)
);
/*FOREIGN KEYS (FACULTY_ID, COURSE_ID, TIMESLOT_ID, SEMESTER_ID)--------------------------*/



/*PRIMARY AND FOREIGN KEYS (COURSE_ID, ROADMAP_ID)---------------------------------------*/
CREATE TABLE ROADMAP(
	ID				INT,
    COURSE_ID		INT,
    SEMESTER		VARCHAR(45),
    
    PRIMARY KEY(COURSE_ID, ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID),
	FOREIGN KEY (ID) REFERENCES MAJOR (ID)
 );
 
/*PRIMARY AND FOREIGN KEYS (COURSE_ID, ROADMAP_ID)--------------------------------------*/



/* PRIMARY AND FOREIGN KEYS (COURSE_START, COURSE_END)----------------------------------*/
CREATE TABLE PREREQUISITES(
	PREREQUISITES	VARCHAR(45),
    COURSE_START	INT,
    COURSE_END		INT,

	PRIMARY KEY (COURSE_START, COURSE_END),
	FOREIGN KEY (COURSE_START) REFERENCES COURSE(ID),
	FOREIGN KEY (COURSE_END) REFERENCES COURSE(ID)
);
/* PRIMARY AND FOREIGN KEYS (COURSE_START, COURSE_END)----------------------------------*/


/* PRIMARY AND FOREIGN KEYS (COURSE_ID, wHITEBOARD_ID)----------------------------------*/
CREATE TABLE COURSE_RULE(
	COURSE_ID		INT,
    WHITEBOARD_ID	INT,
    
    PRIMARY KEY (COURSE_ID, WHITEBOARD_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID),
    FOREIGN KEY (WHITEBOARD_ID) REFERENCES WHITEBOARD(RULEID)
);
/* PRIMARY AND FOREIGN KEYS (COURSE_ID, wHITEBOARD_ID)----------------------------------*/









